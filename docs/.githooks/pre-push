#!/bin/bash

RED='\033[0;31m'
YELLOW='\033[0;33m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
NC='\033[0m'

# Get the absolute path of the git root directory
GIT_ROOT=$(git rev-parse --show-toplevel)

echo -e "${CYAN}Running tests before push...${NC}"

# Function to run tests in a directory
run_go_tests() {
    local dir="$GIT_ROOT/$1"
    echo -e "${CYAN}Running tests in ${YELLOW}$dir${CYAN}...${NC}"
    
    if [ ! -d "$dir" ]; then
        echo -e "${RED}error: Directory ${YELLOW}$dir${RED} does not exist${NC}"
        return 1
    fi
    
    # Capture the current directory to return to later
    local current_dir=$(pwd)
    
    cd "$dir" || {
        echo -e "${RED}error: Could not enter directory ${YELLOW}$dir${NC}"
        return 1
    }
    
    echo -e "${CYAN}Executing tests in $(pwd)...${NC}"
    go test ./... -v
    local test_result=$?
    
    # Return to the original directory
    cd "$current_dir" || {
        echo -e "${RED}error: Could not return to original directory${NC}"
        return 1
    }
    
    return $test_result
}

# Run client tests
run_go_tests "client/tests"
client_test_result=$?

# Run server-api tests
run_go_tests "server-api/tests"
server_test_result=$?

# Check results
if [ $client_test_result -ne 0 ] || [ $server_test_result -ne 0 ]; then
    echo -e "${RED}❌ Some tests failed. Push aborted.${NC}"
    echo -e "${RED}Client tests exit code: ${YELLOW}$client_test_result${NC}"
    echo -e "${RED}Server tests exit code: ${YELLOW}$server_test_result${NC}"
    exit 1
else
    echo -e "${GREEN}✅ All tests passed. Proceeding with push.${NC}"
    exit 0
fi
